name: Test

on:
  push:
    branches:
      - main
  pull_request:

# This uses the toolchain defined in rust-toolchain
jobs:
  fmt:
    name: "Rustfmt"
    runs-on: ubuntu-latest
    env:
      # Rustfmt requires a nightly toolchain because we use unstable rules. The
      # chosen version is fairly arbitrary
      TOOLCHAIN: nightly-2024-04-20
    steps:
      - uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{env.TOOLCHAIN}}
          components: rustfmt

      - name: Cache Rust files
        uses: swatinem/rust-cache@v2

      - name: Rustfmt
        uses: actions-rs/cargo@v1
        with:
          toolchain: ${{env.TOOLCHAIN}}
          command: fmt
          args: -- --check

  lint:
    name: Check/Lint - ${{ matrix.platform.name }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - name: Linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
    runs-on: ${{ matrix.platform.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Cache Rust files
        uses: swatinem/rust-cache@v2
        with:
          key: ${{ matrix.platform.target }}

      - name: Install toolchain
        run: rustup target add ${{ matrix.platform.target }}

      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --target ${{ matrix.platform.target }} --all-targets --all-features -- -D clippy::all

  test:
    name: Test - ${{ matrix.platform.name }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - name: Linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
    runs-on: ${{ matrix.platform.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Cache Rust files
        uses: swatinem/rust-cache@v2
        with:
          key: ${{ matrix.platform.target }}

      - name: Install toolchain
        run: rustup target add ${{ matrix.platform.target }}

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
